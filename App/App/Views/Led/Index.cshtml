
@{
    ViewBag.Title = "Control Led";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Control Led</h2>

<div class="color-picker"></div>

<br />

<div>
    <a class="btn btn-primary btn-lg" onclick="ObtenerValor();">Obtener Valor</a>
</div>

@section scripts {
    <script src = "https://cdn.jsdelivr.net/npm/@@simonwep/pickr/dist/pickr.min.js" ></script>
    <script src = "https://cdn.jsdelivr.net/npm/@@simonwep/pickr/dist/pickr.es5.min.js" ></script>
    
    <script type="text/javascript">
        const pickr = Pickr.create({
            el: '.color-picker',
            theme: 'classic', // or 'monolith', or 'nano'

            swatches: [
                'rgba(244, 67, 54, 1)',
                'rgba(233, 30, 99, 0.95)',
                'rgba(156, 39, 176, 0.9)',
                'rgba(103, 58, 183, 0.85)',
                'rgba(63, 81, 181, 0.8)',
                'rgba(33, 150, 243, 0.75)',
                'rgba(3, 169, 244, 0.7)',
                'rgba(0, 188, 212, 0.7)',
                'rgba(0, 150, 136, 0.75)',
                'rgba(76, 175, 80, 0.8)',
                'rgba(139, 195, 74, 0.85)',
                'rgba(205, 220, 57, 0.9)',
                'rgba(255, 235, 59, 0.95)',
                'rgba(255, 193, 7, 1)'
            ],

            components: {

                // Main components
                preview: true,
                opacity: true,
                hue: true,

                // Input / output Options
                interaction: {
                    hex: true,
                    rgba: true,
                    hsla: true,
                    hsva: true,
                    cmyk: true,
                    input: true,
                    clear: true,
                    save: true
                }
            }
        });
    </script>


    <script>
        // Obtenemos el valor por el tipo de tag
        String.prototype.convertToRGB = function () {
            //if (this.length != 6) {
            //    throw "Only six-digit hex colors are allowed.";
            //}

            var aRgbHex = this.match(/.{1,2}/g);
            var aRgb = [
                parseInt(aRgbHex[0], 16),
                parseInt(aRgbHex[1], 16),
                parseInt(aRgbHex[2], 16)
            ];
            return aRgb;
        }
        // Remueve un caracter de la posicion que se indique en un string
        String.prototype.removeCharAt = function (i) {
            var tmp = this.split(''); // convert to an array
            tmp.splice(i - 1, 1); // remove 1 element from the array (adjusting for non-zero-indexed counts)
            return tmp.join(''); // reconstruct the string
        }

        function ObtenerValor() {
            var porTagName = document.getElementsByTagName("input")[0].value;

            console.log(porTagName.removeCharAt(1).convertToRGB());
            var color = porTagName.removeCharAt(1).convertToRGB();
            console.log(color[0]);

            fetch('https://localhost:44354/Led/ModificarLed', {
                method: 'POST',
                body: JSON.stringify({
                    "R": color[0],
                    "G": color[1],
                    "B": color[2]
                }),
                headers: {
                    "Content-type": "application/json; charset=UTF-8"
                }
            })
                .then(response => response.json())
                .then(json => console.log(json))
        }
    </script>     
}


